<launch>
 
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="start_gazebo" default="true" doc="If true, Gazebo will be started. If false, Gazebo will be assumed to have been started elsewhere." />
  <arg name="gazebo_world" default="$(find robot_gazebo)/world/my_world.world" doc="The '.world' file to load in Gazebo." />
  <!-- <arg name="gazebo_world" default="worlds/empty.world" doc="The '.world' file to load in Gazebo." /> -->
  <arg name="gazebo_model_name" default="robot" doc="The name to give to the model in Gazebo (after spawning it)." />
  <arg name="robot_description_param_name" default="robot_description" doc="Name of the parameter which contains the robot description (ie: URDF) which should be spawned into Gazebo." />
  <arg name="spawn_z" default="0.1" doc="At which height the model should be spawned. NOTE: lower values will cause the robot to collide with the ground plane." />
  <arg name="controllers_start" default="joint_state_controller scaled_pos_joint_traj_controller"/>
  <arg name="controllers_load" default="joint_group_pos_controller"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" if="$(arg start_gazebo)">
    <arg name="world_name" value="$(arg gazebo_world)"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find robot_gazebo)/urdf/ur.xacro"/>
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
    args="
      -urdf 
      -model $(arg gazebo_model_name)
      -param $(arg robot_description_param_name)
      -z $(arg spawn_z)"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find robot_gazebo)/config/ros_controllers.yaml" command="load"/>

  <!-- load the controllers -->
  <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" ns="/ur5e" output="screen" args="arm_controller"/> -->
  <node name="ros_control_controller_spawner1" pkg="controller_manager" type="spawner"
    args="$(arg controllers_start)" output="screen" respawn="false" />

  <node name="ros_control_controller_spawner2" pkg="controller_manager" type="spawner"
    args="--stopped $(arg controllers_load)" output="screen" respawn="false" />

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <!-- <remap from="/joint_states" to="/ur5e/joint_states" /> -->
  </node>
</launch>